[@redef "true"];

type pairList = list((int, int));

type person = int;

type requirement =
  | Sit_together(person, person)
  | Sit_apart(person, person);

/* let requirements = */
/*   List.map(((a, b)) => Sit_together(a, b), shouldSitTogether) */
/*   ++ List.map(((a, b)) => Sit_apart(a, b), shouldSitApart); */

/* let requirement_met = (a: assignment, req: requirement) => */
/*   switch (req) { */
/*   | Sit_together(p, p') => */
/*     let (p_tbl, p'_tbl) = (Map.get(p, a), Map.get(p', a)); */
/*     p_tbl == p'_tbl; */
/*   | Sit_apart(p, p') => */
/*     let (p_tbl, p'_tbl) = (Map.get(p, a), Map.get(p', a)); */
/*     p_tbl != p'_tbl; */
/*   }; */

/* let valid_assignment = (a: assignment) => */
/*   List.for_all(requirement_met(a), all_requirements); */

[@require "decoders-yojson"];

[@use "src/App_decoders.ire"];

[@program]
module D = Decode(Decoders_yojson.Basic.Decode);

[@program]
module E = Encode(Decoders_yojson.Basic.Encode);
